{
  "paragraphs": [
    {
      "title": "Data Generation",
      "text": "%spark\ncase class Store(\n    name: String, \n    capacity: Int, \n    opens: Int, \n    closes: Int)\n    \nval stores \u003d Seq(\n    Store(\"a\", 24, 8, 20),\n    Store(\"b\", 36, 7, 21),\n    Store(\"c\", 18, 5, 23)\n)\n\nval df \u003d spark.createDataFrame(stores)\ndf.createOrReplaceTempView(\"stores\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:11:14.726",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defined class Store\n\u001b[1m\u001b[34mstores\u001b[0m: \u001b[1m\u001b[32mSeq[Store]\u001b[0m \u003d List(Store(a,24,8,20), Store(b,36,7,21), Store(c,18,5,23))\n\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [name: string, capacity: int ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612037491392_1831291883",
      "id": "paragraph_1612037491392_1831291883",
      "dateCreated": "2021-01-30 20:11:31.392",
      "dateStarted": "2021-01-31 22:11:14.764",
      "dateFinished": "2021-01-31 22:11:39.846",
      "status": "FINISHED"
    },
    {
      "title": "Selection: Find all stores open after 10pm",
      "text": "%spark\nval query \u003d spark.sql(\"select * from stores where closes \u003e\u003d 22\")\n//query.explain(true)\nquery.show()",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:11:39.940",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+--------+-----+------+\n|name|capacity|opens|closes|\n+----+--------+-----+------+\n|   c|      18|    5|    23|\n+----+--------+-----+------+\n\n\u001b[1m\u001b[34mquery\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [name: string, capacity: int ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612042148906_1724978527",
      "id": "paragraph_1612042148906_1724978527",
      "dateCreated": "2021-01-30 21:29:08.906",
      "dateStarted": "2021-01-31 22:11:39.955",
      "dateFinished": "2021-01-31 22:11:41.928",
      "status": "FINISHED"
    },
    {
      "title": "Selection: Find all stores open after 10pm (DataFrame approach)",
      "text": "%spark\nimport org.apache.spark.sql.functions._\n\nval filter \u003d df.filter($\"closes\" \u003e\u003d 22)\nval where \u003d df.where(\u0027closes \u003e\u003d 22)\nfilter.show()\nwhere.show()",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:11:41.960",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+--------+-----+------+\n|name|capacity|opens|closes|\n+----+--------+-----+------+\n|   c|      18|    5|    23|\n+----+--------+-----+------+\n\n+----+--------+-----+------+\n|name|capacity|opens|closes|\n+----+--------+-----+------+\n|   c|      18|    5|    23|\n+----+--------+-----+------+\n\nimport org.apache.spark.sql.functions._\n\u001b[1m\u001b[34mfilter\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m \u003d [name: string, capacity: int ... 2 more fields]\n\u001b[1m\u001b[34mwhere\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m \u003d [name: string, capacity: int ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612042843043_1749190313",
      "id": "paragraph_1612042843043_1749190313",
      "dateCreated": "2021-01-30 21:40:43.043",
      "dateStarted": "2021-01-31 22:11:41.977",
      "dateFinished": "2021-01-31 22:11:42.787",
      "status": "FINISHED"
    },
    {
      "title": "Projection: SQL approach",
      "text": "%spark\n// find all stores with an occupancy greater than 20\nval pq \u003d spark.sql(\"select name from stores where capacity \u003e 20\")\n//pq.explain(true)\npq.show()\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:11:42.878",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+\n|name|\n+----+\n|   a|\n|   b|\n+----+\n\n\u001b[1m\u001b[34mpq\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [name: string]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612040361468_1903075951",
      "id": "paragraph_1612040361468_1903075951",
      "dateCreated": "2021-01-30 20:59:21.468",
      "dateStarted": "2021-01-31 22:11:42.899",
      "dateFinished": "2021-01-31 22:11:43.626",
      "status": "FINISHED"
    },
    {
      "title": "Projection: DataFrame approach",
      "text": "%spark\ndf\n  .select(\"name\")\n  .where(\u0027capacity \u003e 20)\n  .show\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:11:43.701",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+\n|name|\n+----+\n|   a|\n|   b|\n+----+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612047712316_857469",
      "id": "paragraph_1612047712316_857469",
      "dateCreated": "2021-01-30 23:01:52.317",
      "dateStarted": "2021-01-31 22:11:43.742",
      "dateFinished": "2021-01-31 22:11:44.475",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Joins\nYou can take advantage of joins to combine two or more sources across a join criteria (eg. special selection predicate). There are a few different ways to join your data and selecting the appropriate join style is critically important to the resulting rows returned post-query.\n\n### Join Styles\n* **Innter Join** - Selects all rows where the conditions are fulfilled across both sides of the join\n* **Right Join**  - Returns all rows from the right-hand view or dataframe, joining all rows where the conditions are met on the left-hand, or appending nulls when conditions are not met\n* **Left Join**   - Returns all rows from the left-hand view or dataframe, joining all rows where the conditions are also met on the right-hand side, or appending nulls when conditions are not met\n* **Semi Join**  - Returns all rows from the left-hand view or dataframe only if the right-hand condition is met (can use to create a selection filter that uses another reference (dataframe or view) without joining any data from the right-hand side of the join. Eg. \"I want to see all stores that have current occupancy data otherwise I am not interested\"\n* **Full Join**   - Returns all rows across both views or dataframes, filling in null values on either side that doesn\u0027t meet the match criteria",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:11:44.534",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eJoins\u003c/h2\u003e\n\u003cp\u003eYou can take advantage of joins to combine two or more sources across a join criteria (eg. special selection predicate). There are a few different ways to join your data and selecting the appropriate join style is critically important to the resulting rows returned post-query.\u003c/p\u003e\n\u003ch3\u003eJoin Styles\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eInnter Join\u003c/strong\u003e - Selects all rows where the conditions are fulfilled across both sides of the join\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRight Join\u003c/strong\u003e  - Returns all rows from the right-hand view or dataframe, joining all rows where the conditions are met on the left-hand, or appending nulls when conditions are not met\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLeft Join\u003c/strong\u003e   - Returns all rows from the left-hand view or dataframe, joining all rows where the conditions are also met on the right-hand side, or appending nulls when conditions are not met\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSemi Join\u003c/strong\u003e  - Returns all rows from the left-hand view or dataframe only if the right-hand condition is met (can use to create a selection filter that uses another reference (dataframe or view) without joining any data from the right-hand side of the join. Eg. \u0026ldquo;I want to see all stores that have current occupancy data otherwise I am not interested\u0026rdquo;\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFull Join\u003c/strong\u003e   - Returns all rows across both views or dataframes, filling in null values on either side that doesn\u0026rsquo;t meet the match criteria\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612124536768_249771908",
      "id": "paragraph_1612124536768_249771908",
      "dateCreated": "2021-01-31 20:22:16.769",
      "dateStarted": "2021-01-31 22:11:44.563",
      "dateFinished": "2021-01-31 22:11:46.051",
      "status": "FINISHED"
    },
    {
      "title": "Expanding our Data through Joins",
      "text": "%spark\n\n// each store has a number of current occupants (we can see if there is room in a store for more people)\ncase class StoreOccupants(storename: String, occupants: Int)\n\nval occupants \u003d Seq(\n  StoreOccupants(\"a\", 8),\n  StoreOccupants(\"b\", 20),\n  StoreOccupants(\"c\", 16),\n  StoreOccupants(\"d\", 55),\n  StoreOccupants(\"e\", 8)\n)\n\nval occupancy \u003d spark.createDataFrame(occupants)\noccupancy.createOrReplaceTempView(\"store_occupants\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:11:46.062",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defined class StoreOccupants\n\u001b[1m\u001b[34moccupants\u001b[0m: \u001b[1m\u001b[32mSeq[StoreOccupants]\u001b[0m \u003d List(StoreOccupants(a,8), StoreOccupants(b,20), StoreOccupants(c,16), StoreOccupants(d,55), StoreOccupants(e,8))\n\u001b[1m\u001b[34moccupancy\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [storename: string, occupants: int]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612048965209_215318272",
      "id": "paragraph_1612048965209_215318272",
      "dateCreated": "2021-01-30 23:22:45.209",
      "dateStarted": "2021-01-31 22:11:46.083",
      "dateFinished": "2021-01-31 22:11:46.596",
      "status": "FINISHED"
    },
    {
      "title": "Inner Join: SparkSQL Way",
      "text": "%sql\nselect * from stores\ninner join store_occupants on stores.`name` \u003d\u003d store_occupants.`storename`",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 23:59:19.513",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "capacity": "string",
                      "opens": "string",
                      "closes": "string",
                      "storename": "string",
                      "occupants": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tcapacity\topens\tcloses\tstorename\toccupants\na\t24\t8\t20\ta\t8\nb\t36\t7\t21\tb\t20\nc\t18\t5\t23\tc\t16\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d35"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d36"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612127779584_100245478",
      "id": "paragraph_1612127779584_100245478",
      "dateCreated": "2021-01-31 21:16:19.584",
      "dateStarted": "2021-01-31 23:59:19.526",
      "dateFinished": "2021-01-31 23:59:19.773",
      "status": "FINISHED"
    },
    {
      "title": "Inner Join: DataFrame Way",
      "text": "%spark\nval inner \u003d df\n  .join(occupancy)\n  .where(df(\"name\") \u003d\u003d\u003d occupancy(\"storename\"))\n  \ninner.show()",
      "user": "anonymous",
      "dateUpdated": "2021-02-01 00:03:32.892",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+--------+-----+------+---------+---------+\n|name|capacity|opens|closes|storename|occupants|\n+----+--------+-----+------+---------+---------+\n|   a|      24|    8|    20|        a|        8|\n|   b|      36|    7|    21|        b|       20|\n|   c|      18|    5|    23|        c|       16|\n+----+--------+-----+------+---------+---------+\n\n\u001b[1m\u001b[34minner\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m \u003d [name: string, capacity: int ... 4 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d44"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d45"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612128192864_712610208",
      "id": "paragraph_1612128192864_712610208",
      "dateCreated": "2021-01-31 21:23:12.864",
      "dateStarted": "2021-02-01 00:03:32.905",
      "dateFinished": "2021-02-01 00:03:33.296",
      "status": "FINISHED"
    },
    {
      "title": "Right Join: SparkSQL Way",
      "text": "%sql\nselect stores.*, store_occupants.`occupants` from stores \nright join store_occupants on stores.`name` \u003d\u003d store_occupants.`storename`\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-01 00:21:37.776",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "capacity": "string",
                      "opens": "string",
                      "closes": "string",
                      "occupants": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tcapacity\topens\tcloses\toccupants\na\t24\t8\t20\t8\nb\t36\t7\t21\t20\nc\t18\t5\t23\t16\nnull\tnull\tnull\tnull\t55\nnull\tnull\tnull\tnull\t8\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d47"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d48"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612055401017_964595988",
      "id": "paragraph_1612055401017_964595988",
      "dateCreated": "2021-01-31 01:10:01.017",
      "dateStarted": "2021-02-01 00:21:37.790",
      "dateFinished": "2021-02-01 00:21:37.982",
      "status": "FINISHED"
    },
    {
      "title": "Right Join: DataFrame Way",
      "text": "%spark\n// df is our stores data\nval rightJoined \u003d df\n  .join(occupancy,\n    df(\"name\") \u003d\u003d\u003d occupancy(\"storename\"),\n    \"right\")\n\nrightJoined.show()\n\n// show the query plan\n//rightJoined.explain(true)\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-01 00:22:48.240",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+--------+-----+------+---------+---------+\n|name|capacity|opens|closes|storename|occupants|\n+----+--------+-----+------+---------+---------+\n|   a|      24|    8|    20|        a|        8|\n|   b|      36|    7|    21|        b|       20|\n|   c|      18|    5|    23|        c|       16|\n|null|    null| null|  null|        d|       55|\n|null|    null| null|  null|        e|        8|\n+----+--------+-----+------+---------+---------+\n\n\u001b[1m\u001b[34mrightJoined\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [name: string, capacity: int ... 4 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d50"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d51"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612126183281_1040290043",
      "id": "paragraph_1612126183281_1040290043",
      "dateCreated": "2021-01-31 20:49:43.281",
      "dateStarted": "2021-02-01 00:22:48.270",
      "dateFinished": "2021-02-01 00:22:48.839",
      "status": "FINISHED"
    },
    {
      "title": "Left Join: SparkSQL Way",
      "text": "%sql\nselect stores.*, store_occupants.`occupants` from stores \nleft join store_occupants on stores.`name` \u003d\u003d store_occupants.`storename`",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:11:52.057",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "capacity": "string",
                      "opens": "string",
                      "closes": "string",
                      "occupants": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tcapacity\topens\tcloses\toccupants\na\t24\t8\t20\t8\nb\t36\t7\t21\t20\nc\t18\t5\t23\t16\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d13"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d14"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612124720819_1009770906",
      "id": "paragraph_1612124720819_1009770906",
      "dateCreated": "2021-01-31 20:25:20.819",
      "dateStarted": "2021-01-31 22:11:52.085",
      "dateFinished": "2021-01-31 22:11:52.403",
      "status": "FINISHED"
    },
    {
      "title": "Left Join: DataFrame Way",
      "text": "%spark\n// df is our stores data\nval leftJoined \u003d df\n  .join(occupancy,\n    df(\"name\") \u003d\u003d\u003d occupancy(\"storename\"),\n    \"left\")\n\nleftJoined.show()\n\n// show the query plan\n//leftJoined.explain(true)",
      "user": "anonymous",
      "dateUpdated": "2021-02-01 00:35:57.220",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+--------+-----+------+---------+---------+\n|name|capacity|opens|closes|storename|occupants|\n+----+--------+-----+------+---------+---------+\n|   a|      24|    8|    20|        a|        8|\n|   b|      36|    7|    21|        b|       20|\n|   c|      18|    5|    23|        c|       16|\n+----+--------+-----+------+---------+---------+\n\n\u001b[1m\u001b[34mleftJoined\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [name: string, capacity: int ... 4 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d53"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d54"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612126444405_1783165305",
      "id": "paragraph_1612126444405_1783165305",
      "dateCreated": "2021-01-31 20:54:04.405",
      "dateStarted": "2021-02-01 00:35:57.232",
      "dateFinished": "2021-02-01 00:35:57.623",
      "status": "FINISHED"
    },
    {
      "title": "Inline Views",
      "text": "%sql\ncreate or replace \ntemporary view boutiques as (\n  select * from VALUES (\"c\") as data(boutiquename)\n)\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-01 02:00:41.691",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612142782759_506924785",
      "id": "paragraph_1612142782759_506924785",
      "dateCreated": "2021-02-01 01:26:22.759",
      "dateStarted": "2021-02-01 02:00:41.704",
      "dateFinished": "2021-02-01 02:00:41.734",
      "status": "FINISHED"
    },
    {
      "title": "View by way of Selection",
      "text": "%sql\ncreate or replace\ntemporary view boutiques as (\n  select stores.`name` as boutiquename\n  from stores\n  where capacity \u003c 20\n)",
      "user": "anonymous",
      "dateUpdated": "2021-02-01 02:06:03.474",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612144569211_2100979223",
      "id": "paragraph_1612144569211_2100979223",
      "dateCreated": "2021-02-01 01:56:09.211",
      "dateStarted": "2021-02-01 02:06:03.486",
      "dateFinished": "2021-02-01 02:06:03.535",
      "status": "FINISHED"
    },
    {
      "title": "Semi Join: SparkSQL Way",
      "text": "%sql\nselect * from stores\nsemi join boutiques on stores.`name` \u003d\u003d boutiques.`boutiquename`",
      "user": "anonymous",
      "dateUpdated": "2021-02-01 02:06:04.941",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "capacity": "string",
                      "opens": "string",
                      "closes": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tcapacity\topens\tcloses\nc\t18\t5\t23\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d85"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d86"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612126719044_1562801401",
      "id": "paragraph_1612126719044_1562801401",
      "dateCreated": "2021-01-31 20:58:39.044",
      "dateStarted": "2021-02-01 02:06:04.956",
      "dateFinished": "2021-02-01 02:06:05.079",
      "status": "FINISHED"
    },
    {
      "title": "SemiJoin: DataFrame Way",
      "text": "%spark\n// semi-join\nval boutiques \u003d spark.sql(\"select * from boutiques\")\nval semiJoin \u003d df\n  .join(boutiques,\n    df(\"name\") \u003d\u003d\u003d boutiques(\"boutiquename\"),\n    \"semi\")\n\nsemiJoin.show()\n\n// show the query plan\nsemiJoin.explain(true)",
      "user": "anonymous",
      "dateUpdated": "2021-02-01 02:04:04.831",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+--------+-----+------+\n|name|capacity|opens|closes|\n+----+--------+-----+------+\n|   c|      18|    5|    23|\n+----+--------+-----+------+\n\n\u003d\u003d Parsed Logical Plan \u003d\u003d\nJoin LeftSemi, (name#0 \u003d boutiquename#773)\n:- LocalRelation [name#0, capacity#1, opens#2, closes#3]\n+- Project [boutiquename#773, capacity#800, opens#801, closes#802]\n   +- SubqueryAlias boutiques\n      +- Project [name#799 AS boutiquename#773, capacity#800, opens#801, closes#802]\n         +- Filter (capacity#800 \u003c 20)\n            +- SubqueryAlias stores\n               +- LocalRelation [name#799, capacity#800, opens#801, closes#802]\n\n\u003d\u003d Analyzed Logical Plan \u003d\u003d\nname: string, capacity: int, opens: int, closes: int\nJoin LeftSemi, (name#0 \u003d boutiquename#773)\n:- LocalRelation [name#0, capacity#1, opens#2, closes#3]\n+- Project [boutiquename#773, capacity#800, opens#801, closes#802]\n   +- SubqueryAlias boutiques\n      +- Project [name#799 AS boutiquename#773, capacity#800, opens#801, closes#802]\n         +- Filter (capacity#800 \u003c 20)\n            +- SubqueryAlias stores\n               +- LocalRelation [name#799, capacity#800, opens#801, closes#802]\n\n\u003d\u003d Optimized Logical Plan \u003d\u003d\nJoin LeftSemi, (name#0 \u003d boutiquename#773)\n:- LocalRelation [name#0, capacity#1, opens#2, closes#3]\n+- LocalRelation [boutiquename#773]\n\n\u003d\u003d Physical Plan \u003d\u003d\n*(1) BroadcastHashJoin [name#0], [boutiquename#773], LeftSemi, BuildRight\n:- *(1) LocalTableScan [name#0, capacity#1, opens#2, closes#3]\n+- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true])), [id\u003d#808]\n   +- LocalTableScan [boutiquename#773]\n\n\u001b[1m\u001b[34mboutiques\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [boutiquename: string, capacity: int ... 2 more fields]\n\u001b[1m\u001b[34msemiJoin\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [name: string, capacity: int ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d82"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d83"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612126605723_918801157",
      "id": "paragraph_1612126605723_918801157",
      "dateCreated": "2021-01-31 20:56:45.723",
      "dateStarted": "2021-02-01 02:04:04.848",
      "dateFinished": "2021-02-01 02:04:05.304",
      "status": "FINISHED"
    },
    {
      "title": "Full Join: SparkSQL Way",
      "text": "%sql\nselect stores.*, store_occupants.* from stores full join store_occupants on stores.`name` \u003d\u003d store_occupants.`storename`",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:11:54.430",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "capacity": "string",
                      "opens": "string",
                      "closes": "string",
                      "storename": "string",
                      "occupants": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tcapacity\topens\tcloses\tstorename\toccupants\nnull\tnull\tnull\tnull\te\t8\nnull\tnull\tnull\tnull\td\t55\nc\t18\t5\t23\tc\t16\nb\t36\t7\t21\tb\t20\na\t24\t8\t20\ta\t8\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d24"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d25"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d26"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d27"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d28"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612125513414_612017435",
      "id": "paragraph_1612125513414_612017435",
      "dateCreated": "2021-01-31 20:38:33.414",
      "dateStarted": "2021-01-31 22:11:54.447",
      "dateFinished": "2021-01-31 22:11:56.989",
      "status": "FINISHED"
    },
    {
      "title": "Full Join: DataFrame Way",
      "text": "%spark\n// df is our stores data\nval fullJoined \u003d df.join(\n    occupancy, df(\"name\") \u003d\u003d\u003d occupancy(\"storename\"),\n    \"full\")\n\nfullJoined.show()\n\n// show the query plan\n//fullJoined.explain(true)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:11:57.047",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+--------+-----+------+---------+---------+\n|name|capacity|opens|closes|storename|occupants|\n+----+--------+-----+------+---------+---------+\n|null|    null| null|  null|        e|        8|\n|null|    null| null|  null|        d|       55|\n|   c|      18|    5|    23|        c|       16|\n|   b|      36|    7|    21|        b|       20|\n|   a|      24|    8|    20|        a|        8|\n+----+--------+-----+------+---------+---------+\n\n\u001b[1m\u001b[34mfullJoined\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [name: string, capacity: int ... 4 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d29"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d30"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d31"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d32"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d33"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612125730666_1732245628",
      "id": "paragraph_1612125730666_1732245628",
      "dateCreated": "2021-01-31 20:42:10.667",
      "dateStarted": "2021-01-31 22:11:57.071",
      "dateFinished": "2021-01-31 22:11:58.710",
      "status": "FINISHED"
    },
    {
      "text": "%spark\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:11:58.765",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1612128941610_339683865",
      "id": "paragraph_1612128941610_339683865",
      "dateCreated": "2021-01-31 21:35:41.610",
      "status": "FINISHED"
    }
  ],
  "name": "4_1_DataSelectionAndProjectionFinal",
  "id": "2FZ6MHN87",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {
    "isRunning": false
  }
}